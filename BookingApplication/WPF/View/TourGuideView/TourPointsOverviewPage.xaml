<Page x:Class="BookingApplication.WPF.View.TourGuideView.TourPointsOverviewPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:BookingApplication.WPF.View.TourGuideView"
      mc:Ignorable="d" 
      Title="TourPointsOverviewPage"
      Width="1106"  
      Height="850"
      Style="{DynamicResource Background}">
    <Page.Resources>
        <Style x:Key="Button" TargetType="Button">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="FontFamily" Value="Arial"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Background" Value="FloralWhite">
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border"
                                CornerRadius="5,5,5,5"
                                BorderBrush="Black"
                                BorderThickness="1"
                                Background="FloralWhite"
                                Grid.Row="1">

                            <ContentPresenter Content="{TemplateBinding Content}"
                                              Margin="{TemplateBinding Padding}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#8d9f87"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#fffba0"></Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="Gray"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DisabledButton" TargetType="Button">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="FontFamily" Value="Arial"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0.7" Color="#358f80" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Border CornerRadius="5,5,5,5"
                                    BorderBrush="Black"
                                    BorderThickness="1"
                                    Background="Black">
                            </Border>
                            <Border CornerRadius="5,5,5,5"
                                    BorderBrush="Black"
                                    BorderThickness="1"
                                    Background="Gray"
                                    Grid.Row="1">

                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  Margin="{TemplateBinding Padding}" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Title" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="40" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="Cascadia Code"></Setter>
        </Style>

        <Style x:Key="TextBox" TargetType="TextBox">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="FontFamily" Value="Arial"></Setter>
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0.1" Color="#e9edc9" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ColumnHeader" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#ccd5ae"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        </Style>
        <Style x:Key="DataGrid" TargetType="DataGrid">
            <Setter Property="Background" Value="#e9edc9"></Setter>
        </Style>
        <Style x:Key="Toolbar" TargetType="ToolBar">
            <Setter Property="Background" Value="#184E77"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="BorderBrush" Value="Black"></Setter>
        </Style>
        <Style x:Key="DataCell" TargetType="DataGridCell">
            <Setter Property="FontSize" Value="28"></Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Margin="0,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Border CornerRadius="5,5,5,5"
                                    BorderBrush="Black"
                                    BorderThickness="1"
                                    Background="Black">
                            </Border>
                            <Border CornerRadius="5,5,5,5"
                                    BorderBrush="Black"
                                    BorderThickness="1"
                                    Background="#f4f4d5"
                                    Grid.Row="1">

                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  Margin="{TemplateBinding Padding}" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridCellCB" TargetType="DataGridCell">
            <Setter Property="Background" Value="Green"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#184E77"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridRow" TargetType="DataGridRow">
            <Setter Property="Background" Value="#f4f4d5"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#184E77"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Background" TargetType="Page">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontFamily" Value="Arial"></Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0.2" Color="#d9ed92" />
                            <GradientStop Offset="0.9" Color="#67b99a" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="225"/>
            <RowDefinition Height="42*"/>
            <RowDefinition Height="523*"/>
            <RowDefinition Height="60*"/>
        </Grid.RowDefinitions>

        <TextBlock Style="{DynamicResource Title}" TextAlignment="Left" FontSize="50" Margin="30,0,691,173">Tour Points</TextBlock>
        <Grid Grid.Row="1" Margin="28,33,12,56" Grid.RowSpan="2">
            <DataGrid x:Name="TourPointsDataGrid" ItemsSource="{Binding TourPoints}"
                      SelectedItem="{Binding Path=SelectedTourPoint}"
                      SelectionMode="Single" CanUserAddRows="False"
                      VerticalScrollBarVisibility="Visible"
                      Style="{DynamicResource DataGrid}"
                      ColumnHeaderStyle="{DynamicResource ColumnHeader}"
                      RowStyle="{DynamicResource DataGridRow}"
                      AutoGenerateColumns="False" HeadersVisibility="Column" FontSize="20" Width="872" HorizontalAlignment="Left" Margin="33,0,0,0" MinRowHeight="40" ColumnHeaderHeight="32">
                <DataGrid.Columns>
                    <DataGridTextColumn  IsReadOnly="True" Header="Name" Binding="{Binding Name}" Width="2*"/>
                    <DataGridTextColumn  IsReadOnly="True" Header="Order" Binding="{Binding Order}" Width="2*"/>
                    <DataGridCheckBoxColumn CellStyle="{DynamicResource DataGridCellCB}" IsReadOnly="True" Header="Active" Binding="{Binding Active}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>

            <Button x:Name="MarkButton"  HorizontalAlignment="Right" IsEnabled="{Binding IsLiveStatus}" Style="{DynamicResource Button}" FontSize="28" Width="146" Height="105" Command="{Binding ActivateTourPointCommand}" Margin="0,10,0,310" RenderTransformOrigin="0.5,0.5">
                <TextBlock Height="100">Active Tour Point <LineBreak/> and Mark <LineBreak/> Guests</TextBlock>
            </Button>
        </Grid>

        <Grid Grid.Row="2" Margin="0,472,2,0">
            <Button Height="40"  Width="148" Content="Cancel"  Margin="538,10,350,0" Style="{DynamicResource Button}" Command="{Binding CancelTourPointOverviewCommand}"/>
            <Button Height="40"  Width="148" Content="Save"  Margin="350,10,613,00" Style="{DynamicResource Button}" Command="{Binding SaveTourPointOverviewCommand}"/>
        </Grid>

        <StackPanel Margin="28,172,12,67" Grid.RowSpan="3">
            <ToolBar Height="72" Grid.ColumnSpan="2" Margin="30,14,160,14" Style="{DynamicResource Toolbar}">
                <Button x:Name="AddButton" IsEnabled="{Binding IsEditStatus}" Style="{DynamicResource Button}" Height="72" Width="200" Command="{Binding ShowAddTourPointFormCommand}">
                    <StackPanel Orientation="Horizontal" Height="62">
                        <TextBlock Text="Add" FontSize="32" VerticalAlignment="Center" Margin="5,0,0,0" />
                    </StackPanel>
                </Button>
                <Button x:Name="ViewButton" IsEnabled="{Binding IsEditStatus}" Style="{DynamicResource Button}" Height="72" Width="200" >
                    <StackPanel Orientation="Horizontal" Height="62">
                        <TextBlock Text="View" FontSize="32" VerticalAlignment="Center" Margin="5,0,0,0" />
                    </StackPanel>
                </Button>
                <Button x:Name="UpdateButton" IsEnabled="{Binding IsEditStatus}" Style="{DynamicResource Button}" Height="72" Width="200" Command="{Binding ShowUpdateTourPointFormCommand}">
                    <StackPanel Orientation="Horizontal" Height="62">
                        <TextBlock Text="Update" FontSize="32" VerticalAlignment="Center" Margin="5,0,0,0" />
                    </StackPanel>
                </Button>
                <Button x:Name="DeleteButton" IsEnabled="{Binding IsEditStatus}" Style="{DynamicResource Button}" Height="72" Width="200" Command="{Binding DeleteTourPointCommand}">
                    <StackPanel Orientation="Horizontal" Height="62">
                        <TextBlock Name="DeleteTxtBlock" Text="Delete" FontSize="32" VerticalAlignment="Center" Margin="5,0,0,0" />
                    </StackPanel>
                </Button>

            </ToolBar>
        </StackPanel>
        <Button Style="{DynamicResource Button}" Margin="926,10,10,173" FontSize="32" Content="Tutorial"/>
        
    </Grid>
</Page>
