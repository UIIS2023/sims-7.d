<Page x:Class="BookingApplication.WPF.View.TourGuestView.TourReservationPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:tourGuestViewModel="clr-namespace:BookingApplication.WPF.ViewModel.TourGuestViewModel"
      xmlns:converters="clr-namespace:BookingApplication.WPF.View.TourGuestView.Converters"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="TourReservationPage">
    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
        <converters:LocationConverter x:Key="LocationConverter" />
        <Style x:Key="MyButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="19"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <DockPanel>
        <Label FontSize="50"  DockPanel.Dock="Top" HorizontalAlignment="Center">BOOK TOUR</Label>
        <StackPanel>
        <DockPanel DockPanel.Dock="Left" Height="300" VerticalAlignment="Top">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" DockPanel.Dock="Left" Width="350" Margin="0,0,0,50">
            <Button DockPanel.Dock="Left" Height="150" Width="20" Content="&lt;" Name="PreviousImageButton" Command="{Binding PreviousImageCommand}"></Button>
            <Image Name="MyImage"
                   Height="300"
                   Width="300"
                   Source="{Binding CurrentUrl}"
            >
            </Image>
            <Button DockPanel.Dock="Right" Height="150" Width="20" Content="&gt;" Name="NextImageButton" Command="{Binding NextImageCommand}"></Button>
            </StackPanel>
            <StackPanel Width="600">
                <StackPanel Orientation="Horizontal" Margin="0, 10, 0, 0">
                    <TextBlock Text="{Binding SelectedTour.Name}" FontWeight="Bold" FontSize="20"
                               Margin="10, 5, 0, 0"></TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0, 10, 0, 0">
                    <TextBlock Text="{Binding TourLocation}" FontWeight="Bold" FontSize="15"
                               Margin="10, 5, 0, 0"></TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0, 10, 0, 0">
                    <TextBlock Text="{Binding SelectedTour.Description}"
                               Margin="10, 5, 0, 0"></TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0, 10, 0, 0">
                    <Label>Language:</Label>
                    <TextBlock Text="{Binding SelectedTour.Language}"
                               Margin="10, 5, 0, 0"
                               TextAlignment="Right"></TextBlock>
                </StackPanel>
               <StackPanel Orientation="Horizontal" Margin="0, 10, 0, 0">
                   <Label>Duration:</Label>
                   <TextBlock Text="{Binding SelectedTour.Duration, StringFormat={}{0} hours}"
                              Margin="10, 5, 0, 0"></TextBlock>
               </StackPanel>
                
                <StackPanel Orientation="Horizontal" Margin="0, 10, 0, 0">
                    <Label>Maximum Group Size:</Label>
                    <TextBlock Text="{Binding SelectedTour.MaxGuests}"
                               Margin="10, 5, 0, 0"></TextBlock>
                </StackPanel>
            </StackPanel>
            <DockPanel Height="350">
            <Grid DockPanel.Dock="Top" Width="300" Height="350"> 
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Grid.Row="0" Grid.Column="0"
                       DockPanel.Dock="Left"
                       HorizontalAlignment="Center"
                       FontSize="12" FontWeight="SemiBold">Enter group size</Label>
                <xctk:IntegerUpDown Grid.Row="1" Grid.Column="0"
                                    Minimum="1"
                                    Name="GroupSizeTextBox"
                                    DockPanel.Dock="Left" 
                                    TextAlignment="Center"
                                    Value="{Binding GroupSize}"></xctk:IntegerUpDown>
                <Label Grid.Row="0" Grid.Column="1" DockPanel.Dock="Right"
                       HorizontalAlignment="Center"
                       FontSize="12" FontWeight="SemiBold">Select date</Label>
                <ComboBox Name="DatesComboBox" Grid.Row="1" Grid.Column="1"
                          DockPanel.Dock="Right" ItemsSource="{Binding Dates}"
                          SelectedIndex="{Binding SelectedDateIndex}"
                          Margin="5, 0,0 ,0">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <b:InvokeCommandAction Command="{Binding DateChangedCommand}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                </ComboBox>
                <Label Grid.Row="2" Grid.Column="0" FontSize="12" FontWeight="SemiBold" Margin="0, 15, 0, 0">Select voucher</Label>
                <ComboBox Grid.Row="2" Grid.Column="1" Name="VoucherComboBox" ItemsSource="{Binding Vouchers}" SelectedItem="{Binding SelectedVoucher}"
                          SelectedIndex="{Binding SelectedVoucherIndex}" Margin="0, 10, 0, 0"></ComboBox>
                <Label Grid.Column="0" Grid.Row="3" Margin="0, 15, 0, 0" FontSize="12" FontWeight="SemiBold">Enter average group age</Label>
                <xctk:DoubleUpDown Grid.Row="3" Grid.Column="1"  Minimum="1"  Name="DurationTextBox"  Watermark="Enter average guest age"
                                   Value="{Binding AverageAge}"
                                   Margin="0, 10,0 ,0"
                >

                </xctk:DoubleUpDown>
                
                <TextBlock Grid.Column="0" Grid.Row="5" Grid.ColumnSpan="2"
                           Name="WarningTextBlock" Text="{Binding Feedback}" FontWeight="DemiBold"></TextBlock>
                <Button Name="AvailableButton"
                        Grid.Column="0" Grid.Row="4"
                        Grid.ColumnSpan="2" Height="50"
                        DockPanel.Dock="Bottom"
                        IsEnabled="{Binding ButtonIsEnabled}"
                        Command="{Binding AvailableCommand}"
                        Margin="0, 10,0 ,0"
                        FontSize="15" FontWeight="Bold">Check availability</Button>
            </Grid>
        </DockPanel>
        </DockPanel>

            <ListView Visibility="{Binding IsAlternativeTourVisible, Converter={StaticResource BooleanToVisibilityConverter}}" Name="AlternativeToursListView" ItemsSource="{Binding AlternativeTours}" SelectedItem="{Binding AlternativeTour}">
           <ListView.ItemContainerStyle>
               <Style TargetType="{x:Type ListViewItem}">
                   <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                   <Setter Property="VerticalContentAlignment" Value="Stretch" />
                   <Setter Property="Focusable" Value="True" />
                   <Setter Property="Margin" Value="0 0 0 0"/>
                   <Setter Property="Template">
                       <Setter.Value>
                           <ControlTemplate TargetType="{x:Type ListViewItem}">
                               <Border Name="border" Padding="2" SnapsToDevicePixels="true">
                                   <ContentPresenter />
                               </Border>
                               <ControlTemplate.Triggers>
                                   <Trigger Property="IsSelected" Value="true">
                                       <Setter TargetName="border" Property="Background" Value="Transparent"/>
                                       <Setter Property="Foreground" Value="Transparent"/>
                                   </Trigger>
                                   <MultiTrigger>
                                       <MultiTrigger.Conditions>
                                           <Condition Property="IsSelected" Value="false"/>
                                           <Condition Property="IsMouseOver" Value="true"/>
                                       </MultiTrigger.Conditions>
                                       <Setter TargetName="border" Property="Background" Value="Transparent"/>
                                       <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                   </MultiTrigger>
                                   <Trigger Property="IsEnabled" Value="false">
                                       <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                   </Trigger>
                               </ControlTemplate.Triggers>
                           </ControlTemplate>
                       </Setter.Value>
                   </Setter>
               </Style>
           </ListView.ItemContainerStyle>
           <ListView.ItemTemplate>
               <DataTemplate>
                   <DockPanel>
                       <Image Name="MyImage"
                              Width="100"
                              Height="100"
                              Stretch="UniformToFill"
                              Source="{Binding ThumbnailUrl}"></Image>
                       <StackPanel Width="300"
                                   Margin="10"
                                   >
                           <TextBlock FontWeight="ExtraBold" Text="{Binding Name}" Foreground="Black" FontFamily="Sans Serif" FontSize="16" ></TextBlock>
                           <TextBlock FontWeight="Bold" Text="{Binding Converter={StaticResource LocationConverter}}" Foreground="Black" FontFamily="Sans Serif" FontSize="12" TextWrapping="Wrap"></TextBlock>
                           
                           <TextBlock FontSize="14" Text="{Binding Duration, StringFormat={}Duration: {0} hours}" Foreground="Black" TextWrapping="Wrap"></TextBlock>
                       </StackPanel>
                      
                       <Button
                           Name="BookTourButton"
                           Width="70"
                           Height="50"
                           HorizontalAlignment="Right" 
                           Command="{Binding DataContext.ShowAlternativeTourCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                           CommandParameter="{Binding}"
                           Style="{StaticResource MyButtonStyle}">Book
                       </Button>
                   </DockPanel>
               </DataTemplate>
           </ListView.ItemTemplate>
       </ListView>
            <GroupBox BorderBrush="Transparent"  DockPanel.Dock="Bottom" Name="ConfirmationGroupBox" Height="50" Visibility="{Binding IsConfirmationVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <DockPanel>
                    <Button Name="BookTourButton"
                            DockPanel.Dock="Left" 
                            Command="{Binding BookTourCommand}"
                            Style="{StaticResource MyButtonStyle}">Book tour</Button>
                    <Button Name="CancelTourButton"
                            HorizontalAlignment="Right" DockPanel.Dock="Right" Command="{Binding CancelCommand}"
                            Style="{StaticResource MyButtonStyle}">Cancel</Button>
                </DockPanel>
            </GroupBox>
        </StackPanel>
        
    </DockPanel>
    
</Page>
